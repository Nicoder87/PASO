<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
@using Resources
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
string dateType = "System.DateTime";
string[] numericTypes = new string[] {"System.Int16", "System.Int32", "System.Int64", "System.Decimal", "System.Float", "System.Double"};
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{ 
	ViewBag.Title = Resources.<#= ViewDataTypeShortName#>;
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>
    
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        
        <section class="content-header">
            <h3 class="box-title">@ViewBag.Title</h3>
        </section>
        <section class="content">
            <div class="row">
    <# 
    if (isControlHtmlAttributesSupported) {
#>
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
    } else {
#>
			@Html.ValidationSummary(true)
		
<#      
    }
#>

<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
      if (property.Scaffold && !property.IsAssociation) {

		bool isCheckbox = property.TypeName.Equals(boolType);
        
		if (property.IsPrimaryKey) {
#>
        @Html.HiddenFor(model => model.<#= property.PropertyName #>)

<#
        } else if (property.IsForeignKey) { 
				if (isControlHtmlAttributesSupported) {
	#>
						<div class="col-md-6 form-group" >
				
								@Html.DropDownList("<#= property.PropertyName #>", new { @class = "form-control select-custom" })
	<#
				} else {
	#>
								@Html.DropDownList("<#= property.PropertyName #>", String.Empty, new { @class = "form-control select-custom" })
	<#
				}
        } else  {			
			bool isBoolean = property.TypeName.Equals(boolType);
			bool isDateTime = property.TypeName.Equals(dateType);
			bool isNumeric = numericTypes.Contains(property.TypeName);
			if(isBoolean){
#>			
					<div class="col-md-6" >
                        <div class="checkbox">
                            <label>
                                
                                @Html.BasicCheckBoxFor(model => model.<#= property.PropertyName #>, null)
                                
                                @Html.DisplayNameFor(model=>model.<#= property.PropertyName #>)
                            
                            </label>
                        </div>
                
<#          }
			if(isDateTime){
#>					<div class="form-group col-md-6">
							@Html.LabelFor(model=> model.<#= property.PropertyName #>)
							@Html.TextBoxFor(model => model.<#= property.PropertyName #>, null, new {@type="date",@class="form-control"})
<#			}
			if(isNumeric){
#>					<div class="form-group col-md-6">
							@Html.LabelFor(model=> model.<#= property.PropertyName #>)
							@Html.TextBoxFor(model => model.<#= property.PropertyName #>, null, new {@type="number",@class="form-control"})
<#			}
			if(!isDateTime && !isBoolean && !isNumeric){#>	
					<div class="form-group col-md-6">
							@Html.LabelFor(model=> model.<#= property.PropertyName #>)
							@Html.TextBoxFor(model => model.<#= property.PropertyName #>, null, new {@class="form-control"})
						
<#          }
			 if (isControlHtmlAttributesSupported) {
#>			
					@Html.ValidationMessageFor(model => model.<#= property.PropertyName #>, "", new { @class = "text-danger" })
<#        
				} else {
#>						@Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
<#				}
#>
       				</div>	
<#

       }
    }
}
#>					
		</div>
		<div class="clearfix"></div>
        @Html.ActionLink(Resources.Back, "Index", null, null, new { @class = "btn btn-danger" })
        <button type="submit" class="btn btn-primary">@Resources.Accept</button>
</section>
}

<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>